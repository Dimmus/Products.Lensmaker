<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US" lang="en-US"
      xmlns:metal="http://xml.zope.org/namespaces/metal" 
      xmlns:tal="http://xml.zope.org/namespaces/tal" 
      metal:use-macro="here/main_template/macros/master"
      i18n:domain="rhaptos"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n">
 
  <tal:head metal:fill-slot="head_slot"
            tal:define="dummy python:request.set('disable_border',1)">
  </tal:head>

  <body>
    <div metal:fill-slot="main">
      <metal:main define-macro="main">

      <script type="text/javascript">
        function lens_add_select_change_select(sender)
        {
            var arr = cssQuery('ul.lens-add-open-select-ul');
            for (var i=0; i<arr.length; i++)
            {
                arr[i].style.display = 'none';
            }
            if (sender.value != '')
                document.getElementById('lens-add-open-select-ul-'+sender.value).style.display = 'block';
        }
      </script>

      <h1>
        <tal:block replace="structure python:getattr(here, here.getIcon(1))"/>
        <span tal:replace="context/pretty_title_or_id"/>:
        <span i18n:translate="heading_add_to_open_lens">Select lens</span>
      </h1>

      <p i18n:translate="select_lens_help">
        Add the module to an open lens. Select the lens category and then click on a 
        lens in the list below. <metal:slot define-slot="help_end"/>
      </p>

      <tal:def define="errors options/state/getErrors;
                       target_template target_template|string:lens_add_tags;
                       organizers python:[b.getObject() for b in context.portal_catalog(portal_type='LensOrganizer', sort_on='sortable_title')];
                       organizers python:[o for o in organizers if o.getLenses() ];
                       all_organized_lens_paths python:[];
                       dummy python:[all_organized_lens_paths.extend(['/'.join(l.getPhysicalPath()) for l in o.getPublicOpenLenses()]) for o in organizers];
                       mq python:modules['ZTUtils'].make_query;
                       target_template target_template|string:module_publish_taglens">

        <span i18n:translate="select_lens_category">Select appropriate lens category</span>
        <select onChange="lens_add_select_change_select(this)">
          <option value="">-- <span i18n:translate="select">Select</span> --</option>
          <option tal:repeat="organizer organizers"
                  tal:attributes="value organizer/UID"
                  tal:content="organizer/pretty_title_or_id">
          </option>
          <option value="unorganized"><span i18n:translate="uncategorized_lenses">Uncategorized lenses</span></option>
        </select>

        <tal:loop repeat="organizer organizers">
          <ul tal:attributes="id string:lens-add-open-select-ul-${organizer/UID}"
              style="display: none;"
              class="lens-add-open-select-ul">
            <li tal:repeat="lens python:organizer.getPublicOpenLenses()">
                <a tal:define="lpath python:'/'.join(lens.getPhysicalPath());
                               qs python:mq(message=request.get('message',''), lens_paths=[lpath])"
                   tal:attributes="href string:${context/absolute_url}/${target_template}?${qs}"
                   tal:content="lens/pretty_title_or_id">
                </a>
            </li>
          </ul>
        </tal:loop>

          <ul tal:attributes="id string:lens-add-open-select-ul-unorganized"
              style="display: none;"
              class="lens-add-open-select-ul">
            <li tal:repeat="lens python:[l for l in context.lens_tool.getOpenLenses() if (l.getPath() not in all_organized_lens_paths)]">
                <a tal:define="qs python:mq(message=request.get('message',''), lens_paths=[lens.getPath()])"
                   tal:attributes="href string:${context/absolute_url}/${target_template}?${qs}"
                   tal:content="lens/pretty_title_or_id">
                </a>
            </li>
          </ul>

      </tal:def>
      </metal:main>
    </div>
  </body>
</html>
